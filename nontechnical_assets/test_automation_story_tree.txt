0. test automation
 1. one test running on a node
    1.1 Set up a node vm.
    1.2 Put a copy of a test workflow on the node.
    1.3 Verify that we can use Alteryx server to manage test jobs, or choose an alternative.
    1.4 Develop demon and glue code as needed to invoke a test.
    1.5 Develop demon and glue code as needed to handle test results.
 2. Develop schema enough for one test's metadata in the db.
 3. api call to the controller triggers test
    3.1 Identify GitHub event that triggers api call.
    3.2 Develop glue code between GitHub and controller that monitors the event.
    3.3 Develop monitor that detects the event and triggers the test-execution api call.
    3.4 Develop db code to handle the test-execution api call.
    3.5 Develop controller code to call out to appropriate nodes.
 4. Develop demon and glue code to call db api to pass results.
 5. web ui reports single test's results
    5.1 Choose a UI tech stack.
    5.2 Set up a web server on the controller.
    5.3 Code CGI script to report test results.
 6. web ui accepts metadata for single test, team, tool
    6.1 team CRUD
    6.2 test CRUD
    6.3 tool CRUD
 7. spin up a single node on demand
    7.0 Get IT to cooperate.
    7.1 Identify tech stack (IT).
    7.2 Integrate controller with tech stack.
 8. scale up to many tests and teams
    8.1 Scale up to many tests per tool.
    8.2 Scale up to many tools per team.
    8.3 Scale up to many teams.
 9. add other bells and whistles
    9.1 Parallelize where possible.
    9.2 Use VM idle time to repeat tests.
    9.3 Code ad-hoc query interface.
    9.4 Code dashboards.
    9.5 Code reports.
    9.6 Add access control.
        9.6.1 SSO?
    9.7 Code notification layer.
    9.8 Update nodes and node images with latest product build.
    9.9 Code performance monitoring.
    9.10 Integrate unit-test frameworks with the controller.
       9.10.1 Integrate call to execute tests.
       9.10.2 Integrate to receive test results.
 10. Create business process to convert QA bugs to tests.
 11. Migrate data from Mongo DB to PostgreSQL.